// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app_helper_pb.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.google.android.horologist.data;

@kotlin.jvm.JvmName("-initializecompanionConfig")
public inline fun companionConfig(block: com.google.android.horologist.data.CompanionConfigKt.Dsl.() -> kotlin.Unit): com.google.android.horologist.data.CompanionConfig =
  com.google.android.horologist.data.CompanionConfigKt.Dsl._create(com.google.android.horologist.data.CompanionConfig.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.google.android.horologist.data.CompanionConfig`
 */
public object CompanionConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.google.android.horologist.data.CompanionConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.android.horologist.data.CompanionConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.android.horologist.data.CompanionConfig = _builder.build()

    /**
     * `string sourceNode = 1;`
     */
    public var sourceNode: kotlin.String
      @JvmName("getSourceNode")
      get() = _builder.sourceNode
      @JvmName("setSourceNode")
      set(value) {
        _builder.sourceNode = value
      }
    /**
     * `string sourceNode = 1;`
     */
    public fun clearSourceNode() {
      _builder.clearSourceNode()
    }
  }
}
public inline fun com.google.android.horologist.data.CompanionConfig.copy(block: `com.google.android.horologist.data`.CompanionConfigKt.Dsl.() -> kotlin.Unit): com.google.android.horologist.data.CompanionConfig =
  `com.google.android.horologist.data`.CompanionConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

