// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app_helper_pb.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.google.android.horologist.data;

@kotlin.jvm.JvmName("-initializeactivityLaunched")
public inline fun activityLaunched(block: com.google.android.horologist.data.ActivityLaunchedKt.Dsl.() -> kotlin.Unit): com.google.android.horologist.data.ActivityLaunched =
  com.google.android.horologist.data.ActivityLaunchedKt.Dsl._create(com.google.android.horologist.data.ActivityLaunched.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.google.android.horologist.data.ActivityLaunched`
 */
public object ActivityLaunchedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.google.android.horologist.data.ActivityLaunched.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.android.horologist.data.ActivityLaunched.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.android.horologist.data.ActivityLaunched = _builder.build()

    /**
     * <code>bool activityLaunchedOnce = 1;</code>
     */
    public var activityLaunchedOnce: kotlin.Boolean
      @JvmName("getActivityLaunchedOnce")
      get() = _builder.activityLaunchedOnce
      @JvmName("setActivityLaunchedOnce")
      set(value) {
        _builder.activityLaunchedOnce = value
      }
    /**
     * `bool activityLaunchedOnce = 1;`
     */
    public fun clearActivityLaunchedOnce() {
      _builder.clearActivityLaunchedOnce()
    }

    /**
     * `.google.protobuf.Timestamp timestamp = 2;`
     */
    public var timestamp: com.google.protobuf.Timestamp
      @JvmName("getTimestamp")
      get() = _builder.timestamp
      @JvmName("setTimestamp")
      set(value) {
        _builder.timestamp = value
      }
    /**
     * `.google.protobuf.Timestamp timestamp = 2;`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * `.google.protobuf.Timestamp timestamp = 2;`
     * @return Whether the timestamp field is set.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }
    public val ActivityLaunchedKt.Dsl.timestampOrNull: com.google.protobuf.Timestamp?
      get() = _builder.timestampOrNull
  }
}
public inline fun com.google.android.horologist.data.ActivityLaunched.copy(block: `com.google.android.horologist.data`.ActivityLaunchedKt.Dsl.() -> kotlin.Unit): com.google.android.horologist.data.ActivityLaunched =
  `com.google.android.horologist.data`.ActivityLaunchedKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.google.android.horologist.data.ActivityLaunchedOrBuilder.timestampOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimestamp()) getTimestamp() else null

