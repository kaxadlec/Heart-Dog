// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app_helper_pb.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.google.android.horologist.data;

@kotlin.jvm.JvmName("-initializeusageInfo")
public inline fun usageInfo(block: com.google.android.horologist.data.UsageInfoKt.Dsl.() -> kotlin.Unit): com.google.android.horologist.data.UsageInfo =
  com.google.android.horologist.data.UsageInfoKt.Dsl._create(com.google.android.horologist.data.UsageInfo.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.google.android.horologist.data.UsageInfo`
 */
public object UsageInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.google.android.horologist.data.UsageInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.android.horologist.data.UsageInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.android.horologist.data.UsageInfo = _builder.build()

    /**
     * `.com.google.android.horologist.data.UsageStatus usageStatus = 1;`
     */
    public var usageStatus: com.google.android.horologist.data.UsageStatus
      @JvmName("getUsageStatus")
      get() = _builder.usageStatus
      @JvmName("setUsageStatus")
      set(value) {
        _builder.usageStatus = value
      }
    public var usageStatusValue: kotlin.Int
      @JvmName("getUsageStatusValue")
      get() = _builder.usageStatusValue
      @JvmName("setUsageStatusValue")
      set(value) {
        _builder.usageStatusValue = value
      }
    /**
     * `.com.google.android.horologist.data.UsageStatus usageStatus = 1;`
     */
    public fun clearUsageStatus() {
      _builder.clearUsageStatus()
    }

    /**
     * `.google.protobuf.Timestamp timestamp = 2;`
     */
    public var timestamp: com.google.protobuf.Timestamp
      @JvmName("getTimestamp")
      get() = _builder.timestamp
      @JvmName("setTimestamp")
      set(value) {
        _builder.timestamp = value
      }
    /**
     * `.google.protobuf.Timestamp timestamp = 2;`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * `.google.protobuf.Timestamp timestamp = 2;`
     * @return Whether the timestamp field is set.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }
    public val UsageInfoKt.Dsl.timestampOrNull: com.google.protobuf.Timestamp?
      get() = _builder.timestampOrNull
  }
}
public inline fun com.google.android.horologist.data.UsageInfo.copy(block: `com.google.android.horologist.data`.UsageInfoKt.Dsl.() -> kotlin.Unit): com.google.android.horologist.data.UsageInfo =
  `com.google.android.horologist.data`.UsageInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.google.android.horologist.data.UsageInfoOrBuilder.timestampOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimestamp()) getTimestamp() else null

