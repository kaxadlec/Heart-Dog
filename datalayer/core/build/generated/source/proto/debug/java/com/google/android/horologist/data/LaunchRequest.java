// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: app_helper_pb.proto
// Protobuf Java Version: 4.28.2

package com.google.android.horologist.data;

/**
 * Protobuf type {@code com.google.android.horologist.data.LaunchRequest}
 */
public  final class LaunchRequest extends
    com.google.protobuf.GeneratedMessageLite<
        LaunchRequest, LaunchRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:com.google.android.horologist.data.LaunchRequest)
    LaunchRequestOrBuilder {
  private LaunchRequest() {
  }
  private int launchConfigCase_ = 0;
  private java.lang.Object launchConfig_;
  public enum LaunchConfigCase {
    OWN_APP(1),
    COMPANION(2),
    ACTIVITY(3),
    LAUNCHCONFIG_NOT_SET(0);
    private final int value;
    private LaunchConfigCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LaunchConfigCase valueOf(int value) {
      return forNumber(value);
    }

    public static LaunchConfigCase forNumber(int value) {
      switch (value) {
        case 1: return OWN_APP;
        case 2: return COMPANION;
        case 3: return ACTIVITY;
        case 0: return LAUNCHCONFIG_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public LaunchConfigCase
  getLaunchConfigCase() {
    return LaunchConfigCase.forNumber(
        launchConfigCase_);
  }

  private void clearLaunchConfig() {
    launchConfigCase_ = 0;
    launchConfig_ = null;
  }

  public static final int OWN_APP_FIELD_NUMBER = 1;
  /**
   * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
   */
  @java.lang.Override
  public boolean hasOwnApp() {
    return launchConfigCase_ == 1;
  }
  /**
   * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
   */
  @java.lang.Override
  public com.google.android.horologist.data.OwnAppConfig getOwnApp() {
    if (launchConfigCase_ == 1) {
       return (com.google.android.horologist.data.OwnAppConfig) launchConfig_;
    }
    return com.google.android.horologist.data.OwnAppConfig.getDefaultInstance();
  }
  /**
   * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
   */
  private void setOwnApp(com.google.android.horologist.data.OwnAppConfig value) {
    value.getClass();
  launchConfig_ = value;
    launchConfigCase_ = 1;
  }
  /**
   * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
   */
  private void mergeOwnApp(com.google.android.horologist.data.OwnAppConfig value) {
    value.getClass();
  if (launchConfigCase_ == 1 &&
        launchConfig_ != com.google.android.horologist.data.OwnAppConfig.getDefaultInstance()) {
      launchConfig_ = com.google.android.horologist.data.OwnAppConfig.newBuilder((com.google.android.horologist.data.OwnAppConfig) launchConfig_)
          .mergeFrom(value).buildPartial();
    } else {
      launchConfig_ = value;
    }
    launchConfigCase_ = 1;
  }
  /**
   * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
   */
  private void clearOwnApp() {
    if (launchConfigCase_ == 1) {
      launchConfigCase_ = 0;
      launchConfig_ = null;
    }
  }

  public static final int COMPANION_FIELD_NUMBER = 2;
  /**
   * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
   */
  @java.lang.Override
  public boolean hasCompanion() {
    return launchConfigCase_ == 2;
  }
  /**
   * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
   */
  @java.lang.Override
  public com.google.android.horologist.data.CompanionConfig getCompanion() {
    if (launchConfigCase_ == 2) {
       return (com.google.android.horologist.data.CompanionConfig) launchConfig_;
    }
    return com.google.android.horologist.data.CompanionConfig.getDefaultInstance();
  }
  /**
   * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
   */
  private void setCompanion(com.google.android.horologist.data.CompanionConfig value) {
    value.getClass();
  launchConfig_ = value;
    launchConfigCase_ = 2;
  }
  /**
   * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
   */
  private void mergeCompanion(com.google.android.horologist.data.CompanionConfig value) {
    value.getClass();
  if (launchConfigCase_ == 2 &&
        launchConfig_ != com.google.android.horologist.data.CompanionConfig.getDefaultInstance()) {
      launchConfig_ = com.google.android.horologist.data.CompanionConfig.newBuilder((com.google.android.horologist.data.CompanionConfig) launchConfig_)
          .mergeFrom(value).buildPartial();
    } else {
      launchConfig_ = value;
    }
    launchConfigCase_ = 2;
  }
  /**
   * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
   */
  private void clearCompanion() {
    if (launchConfigCase_ == 2) {
      launchConfigCase_ = 0;
      launchConfig_ = null;
    }
  }

  public static final int ACTIVITY_FIELD_NUMBER = 3;
  /**
   * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
   */
  @java.lang.Override
  public boolean hasActivity() {
    return launchConfigCase_ == 3;
  }
  /**
   * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
   */
  @java.lang.Override
  public com.google.android.horologist.data.ActivityConfig getActivity() {
    if (launchConfigCase_ == 3) {
       return (com.google.android.horologist.data.ActivityConfig) launchConfig_;
    }
    return com.google.android.horologist.data.ActivityConfig.getDefaultInstance();
  }
  /**
   * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
   */
  private void setActivity(com.google.android.horologist.data.ActivityConfig value) {
    value.getClass();
  launchConfig_ = value;
    launchConfigCase_ = 3;
  }
  /**
   * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
   */
  private void mergeActivity(com.google.android.horologist.data.ActivityConfig value) {
    value.getClass();
  if (launchConfigCase_ == 3 &&
        launchConfig_ != com.google.android.horologist.data.ActivityConfig.getDefaultInstance()) {
      launchConfig_ = com.google.android.horologist.data.ActivityConfig.newBuilder((com.google.android.horologist.data.ActivityConfig) launchConfig_)
          .mergeFrom(value).buildPartial();
    } else {
      launchConfig_ = value;
    }
    launchConfigCase_ = 3;
  }
  /**
   * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
   */
  private void clearActivity() {
    if (launchConfigCase_ == 3) {
      launchConfigCase_ = 0;
      launchConfig_ = null;
    }
  }

  public static com.google.android.horologist.data.LaunchRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.android.horologist.data.LaunchRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.android.horologist.data.LaunchRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.android.horologist.data.LaunchRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.android.horologist.data.LaunchRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.android.horologist.data.LaunchRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.android.horologist.data.LaunchRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.android.horologist.data.LaunchRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.android.horologist.data.LaunchRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.android.horologist.data.LaunchRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.android.horologist.data.LaunchRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.android.horologist.data.LaunchRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.google.android.horologist.data.LaunchRequest prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code com.google.android.horologist.data.LaunchRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.android.horologist.data.LaunchRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.google.android.horologist.data.LaunchRequest)
      com.google.android.horologist.data.LaunchRequestOrBuilder {
    // Construct using com.google.android.horologist.data.LaunchRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public LaunchConfigCase
        getLaunchConfigCase() {
      return instance.getLaunchConfigCase();
    }

    public Builder clearLaunchConfig() {
      copyOnWrite();
      instance.clearLaunchConfig();
      return this;
    }


    /**
     * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
     */
    @java.lang.Override
    public boolean hasOwnApp() {
      return instance.hasOwnApp();
    }
    /**
     * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
     */
    @java.lang.Override
    public com.google.android.horologist.data.OwnAppConfig getOwnApp() {
      return instance.getOwnApp();
    }
    /**
     * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
     */
    public Builder setOwnApp(com.google.android.horologist.data.OwnAppConfig value) {
      copyOnWrite();
      instance.setOwnApp(value);
      return this;
    }
    /**
     * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
     */
    public Builder setOwnApp(
        com.google.android.horologist.data.OwnAppConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setOwnApp(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
     */
    public Builder mergeOwnApp(com.google.android.horologist.data.OwnAppConfig value) {
      copyOnWrite();
      instance.mergeOwnApp(value);
      return this;
    }
    /**
     * <code>.com.google.android.horologist.data.OwnAppConfig own_app = 1;</code>
     */
    public Builder clearOwnApp() {
      copyOnWrite();
      instance.clearOwnApp();
      return this;
    }

    /**
     * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
     */
    @java.lang.Override
    public boolean hasCompanion() {
      return instance.hasCompanion();
    }
    /**
     * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
     */
    @java.lang.Override
    public com.google.android.horologist.data.CompanionConfig getCompanion() {
      return instance.getCompanion();
    }
    /**
     * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
     */
    public Builder setCompanion(com.google.android.horologist.data.CompanionConfig value) {
      copyOnWrite();
      instance.setCompanion(value);
      return this;
    }
    /**
     * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
     */
    public Builder setCompanion(
        com.google.android.horologist.data.CompanionConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setCompanion(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
     */
    public Builder mergeCompanion(com.google.android.horologist.data.CompanionConfig value) {
      copyOnWrite();
      instance.mergeCompanion(value);
      return this;
    }
    /**
     * <code>.com.google.android.horologist.data.CompanionConfig companion = 2;</code>
     */
    public Builder clearCompanion() {
      copyOnWrite();
      instance.clearCompanion();
      return this;
    }

    /**
     * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
     */
    @java.lang.Override
    public boolean hasActivity() {
      return instance.hasActivity();
    }
    /**
     * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
     */
    @java.lang.Override
    public com.google.android.horologist.data.ActivityConfig getActivity() {
      return instance.getActivity();
    }
    /**
     * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
     */
    public Builder setActivity(com.google.android.horologist.data.ActivityConfig value) {
      copyOnWrite();
      instance.setActivity(value);
      return this;
    }
    /**
     * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
     */
    public Builder setActivity(
        com.google.android.horologist.data.ActivityConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setActivity(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
     */
    public Builder mergeActivity(com.google.android.horologist.data.ActivityConfig value) {
      copyOnWrite();
      instance.mergeActivity(value);
      return this;
    }
    /**
     * <code>.com.google.android.horologist.data.ActivityConfig activity = 3;</code>
     */
    public Builder clearActivity() {
      copyOnWrite();
      instance.clearActivity();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.google.android.horologist.data.LaunchRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.android.horologist.data.LaunchRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "launchConfig_",
            "launchConfigCase_",
            com.google.android.horologist.data.OwnAppConfig.class,
            com.google.android.horologist.data.CompanionConfig.class,
            com.google.android.horologist.data.ActivityConfig.class,
          };
          java.lang.String info =
              "\u0000\u0003\u0001\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001<\u0000\u0002<" +
              "\u0000\u0003<\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.google.android.horologist.data.LaunchRequest> parser = PARSER;
        if (parser == null) {
          synchronized (com.google.android.horologist.data.LaunchRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.google.android.horologist.data.LaunchRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.google.android.horologist.data.LaunchRequest)
  private static final com.google.android.horologist.data.LaunchRequest DEFAULT_INSTANCE;
  static {
    LaunchRequest defaultInstance = new LaunchRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      LaunchRequest.class, defaultInstance);
  }

  public static com.google.android.horologist.data.LaunchRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<LaunchRequest> PARSER;

  public static com.google.protobuf.Parser<LaunchRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

